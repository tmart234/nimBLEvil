name: Build Custom NimBLE Firmware

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build-nrf52-fuzzer:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Setup Build Environment
      run: |
        sudo apt-get update
        sudo apt-get install -y git make gcc-arm-none-eabi python3 python3-pip
        # Install Apache Mynewt tools
        python3 -m pip install --user https://github.com/apache/mynewt-newt/releases/download/mynewt_1_10_0_tag/newt-1.10.0.tar.gz
        echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: Add Fuzzing Source
      run: |
        mkdir -p repos/apache-mynewt-nimble/apps/blehci/src/fuzz
        cp src/ble_fuzz.* repos/apache-mynewt-nimble/apps/blehci/src/fuzz/
        echo 'syscfg.vals.FUZZING_MODE: 1' >> repos/apache-mynewt-nimble/apps/blehci/syscfg.yml

    - name: Apply Patches
      run: |
        NIMBLE_VER=$(grep 'apache-mynewt-nimble' src/project.yml | awk -F: '{print $2}')
        for patch in patches/*.patch; do
          git apply -v --ignore-space-change $patch
        done

    - name: Build Fuzzing Firmware
      run: |
        newt target create nrf52_fuzzer
        newt target set nrf52_fuzzer app=@apache-mynewt-nimble/apps/blehci
        newt target set nrf52_fuzzer bsp=@apache-mynewt-core/hw/bsp/nrf52dk
        newt target set nrf52_fuzzer build_profile=optimized
        newt build nrf52_fuzzer
        newt create-image nrf52_fuzzer 1.0.0
        newt obj copy nrf52_fuzzer firmware.elf

    - name: Upload Firmware Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ble-fuzzer-firmware
        path: |
          firmware.elf
          repos/apache-mynewt-nimble/bin/nrf52_fuzzer/*

    - name: Verify Patches
      run: |
        # Check for fuzzing symbols in final binary
        arm-none-eabi-objdump -t firmware.elf | grep -q 'g_phy_raw_tx_mode'
        arm-none-eabi-objdump -t firmware.elf | grep -q 'ble_fuzz_init'