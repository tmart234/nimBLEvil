name: Build Custom NimBLE Firmware

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build-nrf52-fuzzer:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Setup Build Environment
      run: |
        sudo apt-get update
        sudo apt-get install -y git make gcc-arm-none-eabi python3 python3-pip
        python3 -m pip install --user mynewt
        echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: Apply Fuzzing Patches
      run: |
        # Apply critical protocol stack modifications
        patch -p1 -d repos/apache-mynewt-nimble < patches/controller.patch
        patch -p1 -d repos/apache-mynewt-nimble < patches/ble_ll.patch
        patch -p1 -d repos/apache-mynewt-nimble < patches/ble_ll_conn.patch
        patch -p1 -d repos/apache-mynewt-nimble < patches/ble_ll_conn_params.patch
        patch -p1 -d repos/apache-mynewt-nimble < patches/hci_vendor.patch
        patch -p1 -d repos/apache-mynewt-nimble < patches/gap.patch
        patch -p1 -d repos/apache-mynewt-nimble < patches/att_bypass.patch

        # Apply radio configuration overrides
        patch -p1 -d repos/apache-mynewt-core < patches/phy_config.patch

    - name: Build Fuzzing Firmware
      run: |
        newt target create nrf52_fuzzer
        newt target set nrf52_fuzzer app=@apache-mynewt-nimble/apps/blehci
        newt target set nrf52_fuzzer bsp=@apache-mynewt-core/hw/bsp/nrf52dk
        newt target set nrf52_fuzzer build_profile=optimized
        newt build nrf52_fuzzer
        newt create-image nrf52_fuzzer 1.0.0
        newt obj copy nrf52_fuzzer firmware.elf

    - name: Upload Firmware Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ble-fuzzer-firmware
        path: |
          firmware.elf
          repos/apache-mynewt-nimble/bin/nrf52_fuzzer/*